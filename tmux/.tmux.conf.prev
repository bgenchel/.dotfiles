# more history
set -g history-limit 10000

# set window split
bind-key v split-window -h
bind-key b split-window

# set status bar top
#set-option -g status-position top

# Solarized colors
# default statusbar colors
set-option -g status-style fg=yellow,bg=grey,bright

# default window title colors
set-window-option -g window-status-style fg="#808080",bg=default,dim

# active window title colors
set-window-option -g window-status-current-style fg=blue,bg=default,bright

# pane border
set-option -g pane-border-style fg="#808080" #base02
set-option -g pane-active-border-style fg=blue #base01

# message text
set-option -g message-style fg=brightred,bg=black #base02

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
#set-window-option -g window-status-bell-style fg=black,bg=red #base02, red

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
#set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
#set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(hostname)#[default]'
set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M%p#[default] #[fg=blue]%Y-%m-%d'

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window
unbind-key C-b

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -sg escape-time 0

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# tmux < 1.8: bind <prefix>-y to forward to Clipper
bind-key y run-shell "tmux save-buffer - | nc localhost 8377"

# tmux >= 1.8: bind "Enter" in copy mode to both copy and forward to Clipper
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "nc localhost 8377"

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key u resize-pane -Z

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# allow use of the mouse
set -g mouse on

# color
set -g default-terminal "xterm-256color"

# set aggressive resize off
setw -g aggressive-resize on

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'
